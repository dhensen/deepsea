---
- name: install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.7.5/bin/linux/amd64/kubectl
    checksum: sha256:0392ed74bc29137b2a7db7aca9a0a0c1bc85c4cd55b6a42ea556e1a7c485f745
    dest: /usr/local/bin/kubectl
    mode: o+x,g+x,u+x


- name: add apt-key for for kubernetes repository required to install kubelet and kubeadm
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add the kubernetes sources list
  copy:
    src: kubernetes.list
    dest: /etc/apt/sources.list.d/kubernetes.list
    owner: root
    group: root
    mode: 0644

- name: install kubelet and kubeadm
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - kubelet
    - kubeadm
  notify:
  - enable kubelet
  - start kubelet

- name: kubeadm init
  shell: kubeadm init --skip-preflight-checks --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.35.10
  when: inventory_hostname == "node-1"

- name: mkdir .kube dir
  file:
    path: /home/ubuntu/.kube/
    state: directory
  when: inventory_hostname == "node-1"

- name: copy kubeconfig
  copy:
    remote_src: yes
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    owner: ubuntu
    group: ubuntu
  when: inventory_hostname == "node-1"

- name: install a pod network (Flanel in this case)
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml \
    && kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel-rbac.yml
  environment:
    KUBECONFIG: /home/ubuntu/.kube/config
  when: inventory_hostname == "node-1"

- name: Get the node token values
  shell: kubeadm token list | tail -n 1 | awk '{print $1}'
  register: token
  delegate_to: "{{ groups['k8s-master'][0] }}"
  when: inventory_hostname != "node-1"

- name: Set token facts
  set_fact:
    kube_join_token: "{{ token.stdout }}"
  when: inventory_hostname != "node-1"

# - name: register token
#   shell: kubeadm token list | tail -n 1 | awk '{print $1}'
#   register: kube_token
#   when: inventory_hostname == "node-1"

# - name: set token fact
#   set_fact:
#     kube_token: "{{ kube_token['stdout'] }}"
#   when: inventory_hostname == "node-1"

- name: kubeadm join
  shell: kubeadm join --token {{ kube_join_token }} 192.168.35.10:6443
  when: inventory_hostname != "node-1"