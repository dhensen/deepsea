apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: deepsea
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: deepsea
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: deepsea
spec:
  rules:
  - host: deepsea.k8s
    http:
      paths:
      - path: /
        backend:
          serviceName: deepsea
          servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: deepsea
  name: deepsea
spec:
  replicas: 1
  selector:
    matchLabels:
      run: deepsea
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: deepsea
    spec:
      containers:
      - env:
        - name: MYSQL_USERNAME
          value: "root"
        - name: MYSQL_PASSWORD
          value: "root"
        - name: MYSQL_HOST
          value: "mysql-1"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_DATABASE
          value: "test_deepsea"
        image: localhost:5000/deepsea:1504827074
        imagePullPolicy: IfNotPresent
        name: deepsea
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /data/volumes
          name: master
      initContainers:
      - name: init-db
        image: mysql:5.7.19
        env:
        - name: MYSQL_PWD
          value: "root"
        command: ['sh', '-c', 'env && mysql -uroot -h$MYSQL_1_SERVICE_HOST -e "CREATE DATABASE IF NOT EXISTS test_deepsea;"']
      volumes:
      - name: master
        hostPath:
          path: /data/volumes